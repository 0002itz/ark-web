---
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';

interface Props {
    imagePath: string;
    product_obj:{
        id: number;
        product_name: string;
        paragraph: string;
        key_points: string;
        available: boolean;
    };
}

const { product_obj,imagePath} = Astro.props;

const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/*.{jpeg,jpg,png,gif}')

if (!images[imagePath]) throw new Error(`"${imagePath}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif}"`);

const available = product_obj.available ? "Available" : "Out of sock"
---
<a href={`/Product/${product_obj.product_name}`} class="flex flex-col rounded-lg border shadow-md bg-yellow-400 border-gray-700 hover:scale-105 hover:border-gray-700 transition">
    <picture class="flex justify-center p-4 md-5 rounded-lg ">
        <Image src={images[imagePath]()} class="rounded-full" alt={product_obj.product_name} width={200} height={200} />
    </picture>
    <header class="p-3 felx flex-nowrap">
        <h2 class="my-2 text-2xl font-bold tracking-tight text-white">
            {product_obj.product_name}
        </h2>
        <span class:list={[
            'text-xs font-semibold mr-2 px-2.5',
            {
                "bg-green-400 text-grenn-900": product_obj.available,
                "bg-red-400 text-red-900": !product_obj.available
            }
            ]}
            >{available}
        </span>
        <p class="md-4 font-Light text-gray-400">
            {product_obj.paragraph != null && product_obj.paragraph.length > 40 ? product_obj.paragraph.slice(0, 100) + "..." : product_obj.paragraph}
        </p>
    </header>
</a>